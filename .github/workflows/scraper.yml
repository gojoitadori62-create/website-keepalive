name: Keep Website Alive

on:
  schedule:
    - cron: '*/5 * * * *'
  workflow_dispatch:

jobs:
  visit-website:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y wget unzip xvfb libnss3-dev libxss1 libasound2 libxrandr2 libatk1.0-0 libatk-bridge2.0-0 libdrm2 libgtk-3-0 libgbm1
    
    - name: Install Chrome
      run: |
        wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Setup environment
      run: |
        # Create screenshots directory with proper permissions
        mkdir -p screenshots
        chmod -R 777 screenshots
        
        # Verify directory was created
        echo "Current directory:"
        pwd
        echo "\nDirectory contents:"
        ls -la
        echo "\nScreenshots directory contents:"
        ls -la screenshots/ || echo "No screenshots directory found"
    
    - name: Run website visitor
      run: |
        # Set display environment variable
        export DISPLAY=:99
        
        # Start Xvfb in the background
        Xvfb :99 -screen 0 1920x1080x16 &
        
        # Give Xvfb a moment to start
        sleep 5
        
        # Run the script with debug output
        echo "Running script..."
        python -u scraper.py || echo "Script completed with exit code $?"
        
        # Debug: List files after script execution
        echo "\n=== After script execution ==="
        echo "Current directory:"
        pwd
        echo "\nDirectory contents:"
        ls -la
        echo "\nScreenshots directory contents:"
        ls -la screenshots/ || echo "No screenshots directory found"
        
        # If no screenshots found, create a test file to verify permissions
        if [ ! "$(ls -A screenshots/ 2>/dev/null)" ]; then
          echo "No screenshots found. Testing file creation..."
          echo "Test file" > screenshots/test.txt
          ls -la screenshots/
        fi
      continue-on-error: true
      
    - name: Upload screenshots
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: website-screenshots
        path: |
          screenshots/*
          !screenshots/.gitkeep
        if-no-files-found: warn
        retention-days: 7
